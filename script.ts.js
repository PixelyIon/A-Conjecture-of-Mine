const e=require("readline");class t{constructor(e){this.val=e}add(e){return new t(this.val+e.val)}subtrack(e){return new t(this.val-e.val)}multiply(e){return new t(this.val*e.val)}divide(e){return new t(Math.floor(this.val/e.val))}incrementBy(e){this.val+=e.val}divides(e){return e.val/this.val%1==0}getDigits(){return Array.from(this.val.toString()).map(e=>t.from(e))}sumDigits(){let e=t.zero();const o=this.getDigits();for(const t of o)e.incrementBy(t);return e}toString(){return`${this.val}`}static from(e){return new t(Math.round(Number(e)))}static getRange(e,o){const r=e.val,n=o.val,s=[];for(let e=r;e<n;e++)s.push(t.from(e));return s}static zero(){return new t(0)}static one(){return new t(1)}}console.log("This script is a simple test for the following conjecture:\n    \nLet S: N -> N be the sum of the digits of a positive integer.\nFor all A and B in N, S(A + B) = S(A) + S(B) - 9k, where k is an interger.\n"),function(t){const o=e.createInterface({input:process.stdin,output:process.stdout});return new Promise(e=>o.question(t,t=>{o.close(),e(t)}))}("What value would you like to test the conjecture for? ").then(e=>{if(isNaN(Number(e)))console.log(`'${e}' is not an interger!`);else{const o=t.from(e),r=function(e){const o=new Date,r=[],n=t.from(9);let s=t.zero();for(const o of t.getRange(t.one(),e)){const i=o.multiply(t.from(100)).divide(e);s!=i&&(console.clear(),s=i,console.log(`LOADING. . . ${s}%`));for(const s of t.getRange(o,e))n.divides(o.add(s).sumDigits().subtrack(o.sumDigits().add(s.sumDigits())))||r.push([o,s])}const i=((new Date).getTime()-o.getTime())/1e3;return console.clear(),console.log(`LOADED. . . ${s}% in ${i}s\n`),r}(o);if(0==r.length)console.log(`The conjecture is proved for all natural numbers smaller or equals to ${o}!`);else{console.log("The conjecture is disproved! Here are the counter examples:");let e="";for(const t of r)e=`${e}, (${t[0]}, ${t[1]})`;console.log(e)}}}).catch(console.error);